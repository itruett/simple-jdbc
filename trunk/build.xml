<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright 2009 Isaac Truett. 
	
	Licensed under the Apache License,
	Version 2.0 (the "License"); you may not use this file except in
	compliance with the License. You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0 Unless required by
	applicable law or agreed to in writing, software distributed under the
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
	CONDITIONS OF ANY KIND, either express or implied. See the License for
	the specific language governing permissions and limitations under the
	License.
-->
<project name="SimpleJDBC" default="emma-test">
	<property name="build.props.file" value="build.properties" />
	<property file="${build.props.file}" />

	<target name="env-init">
		<property name="build.dir" value="${basedir}/build" />
		<property name="src.dir" value="${basedir}/src" />
	</target>
			
	<target name="emma-init" depends="env-init">
		<property name="bin.dir" value="${basedir}/bin" />
		<property name="emma.dir" value="${basedir}/lib" />
		<property name="coverage.dir" value="${build.dir}/coverage" />
		
		<path id="emma.lib">
			<pathelement location="${emma.dir}/emma.jar" />
			<pathelement location="${emma.dir}/emma_ant.jar" />
		</path>

		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
	</target>

	<target name="junit-init" depends="env-init">
		<fail unless="junit.jar" message="junit.jar must be set on the command line or in ${build.props.file}" />
		<fail unless="hamcrest.jar" message="hamcrest.jar must be set on the command line or in ${build.props.file}" />
		<mkdir dir="${bin.dir}" />
		<path id="junit.classpath">
			<pathelement location="${bin.dir}" />
			<pathelement location="${junit.jar}" />
			<pathelement location="${hamcrest.jar}" />
		</path>
	</target>

	<target name="emma-test" depends="emma-init,junit-init,compile-test">
		<emmajava enabled="true" 
				libclasspathref="emma.lib" 
				classname="org.junit.runner.JUnitCore" 
				classpathref="junit.classpath" 
				sourcepath="${src.dir}">
			<filter value="com.googlecode.simplejdbc.*"/>
			<filter excludes="com.googlecode.simplejdbc.*Test*" />
			<html outfile="${coverage.dir}/index.html" />
			<jvmarg line="-ea" />
			<arg line="com.googlecode.simplejdbc.SimpleJdbcTestSuite"/>
		</emmajava>
	</target>

	<target name="javadoc-init" depends="env-init">
		<property name="javadoc.dir" value="${build.dir}/javadoc" />
	</target>
	
	<target name="javadoc" depends="javadoc-init">
		<javadoc access="protected" classpath="${bin.dir}" verbose="true" destdir="${javadoc.dir}">
			<link href="http://java.sun.com/javase/7/docs/api/" />
			<sourcepath location="${src.dir}" />
		</javadoc>
	</target>

	<target name="compile-init" depends="env-init">
		<property name="javac.source" value="1.6" />
		<property name="javac.target" value="1.6" />
		<property name="javac.optimize" value="true" />
		<property name="javac.debug" value="false" />
	</target>
	
	<target name="compile-src" depends="compile-init">
		<mkdir dir="${bin.dir}" /> 
		<javac 
				source="${javac.source}" 
				target="${javac.target}" 
				srcdir="${src.dir}" 
				debug="${javac.debug}"
				optimize="${javac.optimize}" 
				failonerror="true"
				destdir="${bin.dir}" />
	</target>

	<target name="compile-test-init">
		<property name="test.dir" value="${basedir}/test" />
		<property name="javac.debug" value="true" />
	</target>

	<target name="compile-test" depends="compile-test-init,compile-init,compile-src">
		<mkdir dir="${bin.dir}" /> 
		<javac 
				source="${javac.source}" 
				target="${javac.target}" 
				srcdir="${test.dir}"
				classpathref="junit.classpath"
				debug="${javac.debug}"
				optimize="${javac.optimize}" 
				failonerror="true"
				destdir="${bin.dir}" />
	</target>

	<target name="jar-init" depends="env-init,javadoc-init">
		<property name="bin.dir" value="${build.dir}/bin" />
		<property name="jar.file" value="${build.dir}/simple-jdbc.jar" />
	</target>

	<target name="jar" depends="jar-init,compile-src,javadoc">
		<jar destfile="${jar.file}" compress="true" update="false">
			<zipfileset dir="${bin.dir}" />
			<zipfileset dir="${javadoc.dir}" prefix="doc/api"/>
			<zipfileset dir="${src.dir}" />
		</jar>
	</target>

	<target name="clean" depends="compile-init,javadoc-init,emma-init">
		<delete dir="${bin.dir}" />
		<delete dir="${coverage.dir}" />
		<delete dir="${javadoc.dir}" />
		<delete dir="${build.dir}" />
	</target>
</project>